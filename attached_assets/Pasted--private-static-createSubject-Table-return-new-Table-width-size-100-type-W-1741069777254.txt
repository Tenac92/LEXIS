
  private static createSubject(): Table {
    return new Table({
       width: { size: 100, type: WidthType.PERCENTAGE },
      borders: {
        top: { style: BorderStyle.SINGLE, size: 4 },
        bottom: { style: BorderStyle.SINGLE, size: 4 },
        left: { style: BorderStyle.SINGLE, size: 4 },
        right: { style: BorderStyle.SINGLE, size: 4 },
      },
      rows: [
        new TableRow({
          height: { value: 400, rule: HeightRule.EXACT },
          children: [
            new TableCell({
               width: { size: 10, type: WidthType.PERCENTAGE },
              borders: {
                top: { style: BorderStyle.SINGLE, size: 4 },
                bottom: { style: BorderStyle.SINGLE, size: 4 },
                left: { style: BorderStyle.SINGLE, size: 4 },
                right: { style: BorderStyle.SINGLE, size: 4 },
              },
              children: [
                new Paragraph({
                  children: [
                    new TextRun({
                      text: "ΘΕΜΑ:",
                      bold: true,
                      italics: true,
                      size: this.DEFAULT_FONT_SIZE,
                    }),
                  ],
                  spacing: { line: 20, lineRule: "atLeast" },
                }),
              ],
            }),
            new TableCell({
               width: { size: 90, type: WidthType.PERCENTAGE },
              borders: {
                top: { style: BorderStyle.SINGLE, size: 4 },
                bottom: { style: BorderStyle.SINGLE, size: 4 },
                left: { style: BorderStyle.SINGLE, size: 4 },
                right: { style: BorderStyle.SINGLE, size: 4 },
              },
              children: [
                new Paragraph({
                  children: [
                    new TextRun({
                      text: "Διαβιβαστικό αιτήματος για την πληρωμή Δ.Κ.Α. που έχουν εγκριθεί από τη Δ.Α.Ε.Φ.Κ.-Κ.Ε.",
                      italics: true,
                      size: this.DEFAULT_FONT_SIZE,
                    }),
                  ],
                  spacing: { line: 20, lineRule: "atLeast" },
                }),
              ],
            }),
          ],
        }),
      ],
    });
  }

  private static createMainContent(documentData: DocumentData): Paragraph[] {
    return [
      new Paragraph({
        text: "Σχ.: Οι διατάξεις των άρθρων 7 και 14 του Π.Δ. 77/2023 (Α΄130) «Σύσταση Υπουργείου και μετονομασία Υπουργείων – Σύσταση, κατάργηση και μετονομασία Γενικών και Ειδικών Γραμματειών – Μεταφορά αρμοδιοτήτων, υπηρεσιακών μονάδων, θέσεων προσωπικού και εποπτευόμενων φορέων», όπως τροποποιήθηκε, συμπληρώθηκε και ισχύει.",
      }),
      new Paragraph({
        text: "Αιτούμαστε την πληρωμή των κρατικών αρωγών που έχουν εγκριθεί από τη Δ.Α.Ε.Φ.Κ.-Κ.Ε. , σύμφωνα με τα κάτωθι στοιχεία.",
      }),
      new Paragraph({
        children: [
          new TextRun({ text: "ΑΡ. ΕΡΓΟΥ: ", bold: true }),
          new TextRun({ text: `${documentData.project_na853 || "(na853)"} της ΣΑΝΑ 853 (ΤΕ 2023ΝΑ27100228)` }),
        ],
      }),
      new Paragraph({
        children: [
          new TextRun({ text: "ΑΛΕ: ", bold: true }),
          new TextRun({ text: "2310989004–Οικονομικής ενισχ. πυροπαθών, σεισμ/κτων, πλημ/παθών κ.λπ." }),
        ],
      }),
      new Paragraph({
        children: [
          new TextRun({ text: "ΤΟΜΕΑΣ: ", bold: true }),
          new TextRun({ text: "Υπο-Πρόγραμμα Κρατικής αρωγής και αποκατάστασης επιπτώσεων φυσικών καταστροφών" }),
        ],
      }),
    ];
  }

  private static createPaymentTable(recipients: DocumentData['recipients']): Table {
    const tableBorders: ITableBordersOptions = {
      top: { style: BorderStyle.SINGLE, size: 1 },
      bottom: { style: BorderStyle.SINGLE, size: 1 },
      left: { style: BorderStyle.SINGLE, size: 1 },
      right: { style: BorderStyle.SINGLE, size: 1 },
      insideHorizontal: { style: BorderStyle.SINGLE, size: 1 },
      insideVertical: { style: BorderStyle.SINGLE, size: 1 },
    };

    return new Table({
      width: { size: 9629, type: WidthType.DXA },
      borders: tableBorders,
      rows: [
        new TableRow({
          height: { value: 360, rule: HeightRule.EXACT },
          children: [
            this.createHeaderCell("Α.Α.", 666),
            this.createHeaderCell("ΟΝΟΜΑΤΕΠΩΝΥΜΟ", 4366),
            this.createHeaderCell("ΠΟΣΟ (€)", 1409),
            this.createHeaderCell("ΔΟΣΗ", 1197),
            this.createHeaderCell("ΑΦΜ", 1615),
          ],
        }),
        ...recipients.map((recipient, index) =>
          new TableRow({
            height: { value: 360, rule: HeightRule.EXACT },
            children: [
              this.createTableCell((index + 1).toString() + ".", "center"),
              this.createTableCell(`${recipient.lastname} ${recipient.firstname}`.trim(), "left"),
              this.createTableCell(recipient.amount.toLocaleString('el-GR', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
              }), "right"),
              this.createTableCell(recipient.installment.toString(), "center"),
              this.createTableCell(recipient.afm, "center"),
            ],
          })
        ),
        new TableRow({
          height: { value: 360, rule: HeightRule.EXACT },
          children: [
            this.createTableCell("ΣΥΝΟΛΟ:", "right", 2),
            this.createTableCell(
              recipients.reduce((sum, recipient) => sum + recipient.amount, 0).toLocaleString('el-GR', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
              }) + " €",
              "right"
            ),
            this.createTableCell("", "center", 2),
          ],
        }),
      ],
    });
  }

  private static createNote(): Paragraph {
    return new Paragraph({
      text: "Παρακαλούμε όπως, μετά την ολοκλήρωση της διαδικασίας ελέγχου και εξόφλησης των δικαιούχων, αποστείλετε στην Υπηρεσίας μας αντίγραφα των επιβεβαιωμένων ηλεκτρονικών τραπεζικών εντολών.",
    });
  }

-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.Employees (
  id bigint NOT NULL,
  surname text NOT NULL,
  name text,
  fathername text,
  afm bigint GENERATED ALWAYS AS IDENTITY NOT NULL UNIQUE,
  klados text,
  attribute text,
  workaf text,
  monada text,
  CONSTRAINT Employees_pkey PRIMARY KEY (id),
  CONSTRAINT Employes_monada_fkey FOREIGN KEY (monada) REFERENCES public.Monada(unit)
);
CREATE TABLE public.Monada (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  unit text UNIQUE,
  unit_name jsonb,
  parts jsonb,
  email text,
  director jsonb,
  address jsonb,
  CONSTRAINT Monada_pkey PRIMARY KEY (id)
);
CREATE TABLE public.Projects (
  mis integer GENERATED ALWAYS AS IDENTITY NOT NULL UNIQUE,
  e069 text,
  na271 text,
  na853 text UNIQUE,
  event_description text UNIQUE,
  project_title text,
  event_type jsonb,
  event_year jsonb,
  region jsonb,
  implementing_agency jsonb,
  expenditure_type jsonb,
  kya jsonb,
  fek jsonb,
  ada jsonb,
  ada_import_sana271 jsonb,
  ada_import_sana853 jsonb,
  budget_decision jsonb,
  funding_decision jsonb,
  allocation_decision jsonb,
  budget_e069 numeric,
  budget_na271 numeric,
  budget_na853 numeric,
  status text,
  created_at date,
  updated_at date,
  id integer GENERATED ALWAYS AS IDENTITY NOT NULL UNIQUE,
  CONSTRAINT Projects_pkey PRIMARY KEY (mis, id)
);
CREATE TABLE public.attachments (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  expediture_type text,
  attachments ARRAY,
  CONSTRAINT attachments_pkey PRIMARY KEY (id)
);
CREATE TABLE public.audit_logs (
  id integer NOT NULL DEFAULT nextval('audit_logs_id_seq'::regclass),
  user_id bigint,
  action_type character varying NOT NULL,
  entity_type character varying NOT NULL,
  entity_id character varying NOT NULL,
  details jsonb,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT audit_logs_pkey PRIMARY KEY (id),
  CONSTRAINT audit_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.beneficiaries (
  id integer NOT NULL DEFAULT nextval('beneficiaries_id_seq'::regclass),
  afm character varying NOT NULL UNIQUE,
  surname text NOT NULL,
  name text NOT NULL,
  fathername text,
  region text,
  cengsur1 text,
  cengname1 text,
  cengsur2 text,
  cengname2 text,
  freetext text,
  date date DEFAULT CURRENT_DATE,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT beneficiaries_pkey PRIMARY KEY (id)
);
CREATE TABLE public.beneficiary_payments (
  id integer NOT NULL DEFAULT nextval('beneficiary_payments_id_seq'::regclass),
  beneficiary_id integer,
  unit_code text NOT NULL,
  na853_code text NOT NULL,
  expenditure_type text NOT NULL,
  installment text NOT NULL,
  amount numeric,
  status text DEFAULT 'pending'::text,
  protocol_number text,
  payment_date date,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT beneficiary_payments_pkey PRIMARY KEY (id),
  CONSTRAINT beneficiary_payments_beneficiary_id_fkey FOREIGN KEY (beneficiary_id) REFERENCES public.beneficiaries(id)
);
CREATE TABLE public.budget_history (
  id integer NOT NULL DEFAULT nextval('budget_history_id_seq'::regclass),
  mis integer NOT NULL,
  previous_amount numeric NOT NULL,
  new_amount numeric NOT NULL,
  change_type text NOT NULL,
  change_reason text,
  document_id bigint,
  created_by bigint,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT budget_history_pkey PRIMARY KEY (id),
  CONSTRAINT budget_history_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.generated_documents(id),
  CONSTRAINT budget_history_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.budget_na853_split (
  id integer NOT NULL DEFAULT nextval('budget_na853_split_id_seq'::regclass),
  na853 text NOT NULL UNIQUE,
  mis integer GENERATED ALWAYS AS IDENTITY NOT NULL,
  proip numeric DEFAULT 0,
  ethsia_pistosi numeric DEFAULT 0,
  q1 numeric DEFAULT 0,
  q2 numeric DEFAULT 0,
  q3 numeric DEFAULT 0,
  q4 numeric DEFAULT 0,
  katanomes_etous numeric DEFAULT 0,
  user_view numeric DEFAULT 0,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  last_quarter_check text DEFAULT 'q1'::text,
  sum jsonb,
  CONSTRAINT budget_na853_split_pkey PRIMARY KEY (mis),
  CONSTRAINT budget_na853_split_mis_fkey FOREIGN KEY (mis) REFERENCES public.Projects(mis)
);
CREATE TABLE public.budget_notifications (
  id integer NOT NULL DEFAULT nextval('budget_notifications_id_seq'::regclass),
  mis integer NOT NULL,
  type character varying NOT NULL,
  amount numeric NOT NULL,
  current_budget numeric NOT NULL,
  ethsia_pistosi numeric NOT NULL,
  reason text,
  status character varying DEFAULT 'pending'::character varying,
  user_id integer,
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT budget_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT budget_notifications_mis_fkey FOREIGN KEY (mis) REFERENCES public.budget_na853_split(mis),
  CONSTRAINT budget_notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT budget_notifications_mis_fkey1 FOREIGN KEY (mis) REFERENCES public.Projects(mis)
);
CREATE TABLE public.generated_documents (
  id bigint NOT NULL DEFAULT nextval('generated_documents_id_seq'::regclass),
  created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  generated_by bigint,
  recipients jsonb NOT NULL,
  protocol_date date,
  total_amount numeric,
  document_date date,
  status character varying DEFAULT 'pending'::character varying,
  protocol_number_input text UNIQUE,
  expenditure_type text,
  mis integer,
  project_na853 text,
  unit text,
  original_protocol_number character varying,
  original_protocol_date date,
  is_correction boolean DEFAULT false,
  department text,
  comments text,
  original_document_id bigint,
  updated_by text,
  attachments ARRAY,
  updated_at timestamp with time zone,
  region jsonb,
  esdian ARRAY,
  director_signature jsonb,
  CONSTRAINT generated_documents_pkey PRIMARY KEY (id),
  CONSTRAINT generated_documents_mis_fkey FOREIGN KEY (mis) REFERENCES public.Projects(mis),
  CONSTRAINT generated_documents_project_na853_fkey FOREIGN KEY (project_na853) REFERENCES public.Projects(na853),
  CONSTRAINT generated_documents_generated_by_fkey FOREIGN KEY (generated_by) REFERENCES public.users(id)
);
CREATE TABLE public.kallikratis (
  id integer NOT NULL,
  onoma_dimou_koinotitas text,
  kodikos_koinotitas integer,
  eidos_koinotitas text,
  kodikos_dimotikis_enotitas integer,
  onoma_dimotikis_enotitas text,
  kodikos_neou_ota integer,
  eidos_neou_ota text,
  onoma_neou_ota text,
  kodikos_perifereiakis_enotitas integer,
  perifereiaki_enotita text,
  kodikos_perifereias integer,
  perifereia text,
  code integer,
  CONSTRAINT kallikratis_pkey PRIMARY KEY (id)
);
CREATE TABLE public.project_actions (
  id integer NOT NULL DEFAULT nextval('project_actions_id_seq'::regclass),
  project_id bigint NOT NULL,
  user_id uuid NOT NULL,
  action_type character varying NOT NULL CHECK (action_type::text = ANY (ARRAY['approve'::character varying::text, 'reject'::character varying::text, 'review'::character varying::text])),
  action_date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  notes text,
  CONSTRAINT project_actions_pkey PRIMARY KEY (id),
  CONSTRAINT project_actions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.users (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  name text,
  email text UNIQUE,
  role text,
  password text NOT NULL,
  units jsonb,
  telephone numeric,
  department text,
  details jsonb,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
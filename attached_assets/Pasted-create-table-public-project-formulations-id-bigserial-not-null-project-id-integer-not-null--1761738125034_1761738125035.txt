create table public.project_formulations (
  id bigserial not null,
  project_id integer not null,
  decision_id bigint null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  formulation_sequence integer not null default 1,
  sa_type text not null,
  enumeration_code text null,
  protocol_number text null,
  ada text null,
  decision_year integer null,
  project_budget numeric(12, 2) not null default 0,
  total_public_expense numeric(12, 2) null,
  eligible_public_expense numeric(12, 2) null,
  epa_version text null,
  decision_status text null default 'Ενεργή'::text,
  change_type text null default 'Έγκριση'::text,
  connected_decision_ids integer[] null,
  comments text null,
  is_active boolean null default true,
  created_by bigint null,
  updated_by bigint null,
  constraint project_formulations_pkey primary key (id),
  constraint project_formulations_project_id_formulation_sequence_key unique (project_id, formulation_sequence),
  constraint project_formulations_created_by_fkey foreign KEY (created_by) references users (id),
  constraint project_formulations_project_id_fkey foreign KEY (project_id) references "Projects" (id) on delete CASCADE,
  constraint project_formulations_decision_id_fkey foreign KEY (decision_id) references project_decisions (id) on delete set null,
  constraint project_formulations_updated_by_fkey foreign KEY (updated_by) references users (id),
  constraint project_formulations_sa_type_check check (
    (
      sa_type = any (array['ΝΑ853'::text, 'ΝΑ271'::text, 'E069'::text])
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_project_formulations_project_id on public.project_formulations using btree (project_id) TABLESPACE pg_default;

create index IF not exists idx_project_formulations_decision_id on public.project_formulations using btree (decision_id) TABLESPACE pg_default;

create index IF not exists idx_project_formulations_sa_type on public.project_formulations using btree (sa_type) TABLESPACE pg_default;

create index IF not exists idx_project_formulations_created_at on public.project_formulations using btree (created_at) TABLESPACE pg_default;

create trigger update_project_formulations_updated_at BEFORE
update on project_formulations for EACH row
execute FUNCTION update_updated_at_column ();
import {
  Document,
  Packer,
  Paragraph,
  Table,
  TableRow,
  TableCell,
  TextRun,
  AlignmentType,
  WidthType,
  BorderStyle,
  VerticalAlign,
  VerticalMerge,
  VerticalMergeType,
  HeightRule,
  ITableBordersOptions,
  ImageRun,
  PageOrientation,
  TableLayoutType,
} from "docx";
import { supabase } from "../config/db";
import * as fs from "fs";
import * as path from "path";
import { format } from "date-fns";

interface UserDetails {
  name: string;
  email?: string;
  contact_number?: string;
  telephone?: string; // Added telephone field from Supabase user table
  department?: string;
  descr?: string;
}

interface UnitDetails {
  unit: string;
  unit_name?: {
    name: string;
    prop: string;
  };
  manager?: {
    name: string;
    order: string;
    title: string;
    degree: string;
    prepose?: string; // Set as optional if needed
  };
  email?: string;
  address?: {
    address: string;
    tk: string;
    region: string;
  };
}

interface DocumentData {
  id: number; // Ensure all properties are present and consistent
  unit: string;
  project_id?: string;
  project_na853?: string;
  expenditure_type: string;
  status?: string;
  total_amount?: number;
  protocol_number?: string;
  protocol_number_input?: string;
  protocol_date?: string;
  user_name?: string;
  attachments?: string[];
  contact_number?: string;
  department?: string;
  generated_by?: UserDetails; // Consistent use of UserDetails
  recipients?: Array<{
    firstname: string;
    lastname: string;
    fathername: string;
    afm: string;
    amount: number;
    installment: number | string;
    installments?: string[];
    installmentAmounts?: Record<string, number>;
    secondary_text?: string;
  }>;
}

export class DocumentFormatter {
  private static readonly DEFAULT_FONT_SIZE = 22;
  private static readonly DEFAULT_ADDRESS = {
    address: "Κηφισίας 124 & Ιατρίδου 2",
    tk: "11526",
    region: "Αθήνα",
  };
  private static readonly DEFAULT_FONT = "Calibri";
  private static readonly DEFAULT_MARGINS = {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
  };
  private static readonly DOCUMENT_MARGINS = this.DEFAULT_MARGINS;

  private static async getLogoImageData(): Promise<Buffer> {
    const logoPath = path.join(
      process.cwd(),
      "server",
      "utils",
      "ethnosimo22.png",
    );
    return fs.promises.readFile(logoPath);
  }

  // ...rest of the class implementation...

  // IMPORTANT: When processing recipients, only add ΤΟΥ if fathername exists and is not empty
  // This change is made in two places in the file
  // 1. First location is in the payment table creation
  // 2. Second location is in the secondary document table
}